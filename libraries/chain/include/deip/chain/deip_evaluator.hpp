#pragma once

#include <deip/protocol/deip_operations.hpp>

#include <deip/chain/evaluator.hpp>

namespace deip {
namespace chain {

using namespace deip::protocol;

DEFINE_EVALUATOR(create_account)
DEFINE_EVALUATOR(update_account)
DEFINE_EVALUATOR(transfer)
DEFINE_EVALUATOR(transfer_to_common_tokens)
DEFINE_EVALUATOR(witness_update)
DEFINE_EVALUATOR(account_witness_vote)
DEFINE_EVALUATOR(account_witness_proxy)
DEFINE_EVALUATOR(withdraw_common_tokens)
DEFINE_EVALUATOR(set_withdraw_common_tokens_route)
DEFINE_EVALUATOR(request_account_recovery)
DEFINE_EVALUATOR(recover_account)
DEFINE_EVALUATOR(change_recovery_account)
DEFINE_EVALUATOR(create_proposal)
DEFINE_EVALUATOR(update_proposal)
DEFINE_EVALUATOR(delete_proposal)
DEFINE_EVALUATOR(create_review)
DEFINE_EVALUATOR(contribute_to_token_sale)
DEFINE_EVALUATOR(vote_for_review)
DEFINE_EVALUATOR(create_vesting_balance)
DEFINE_EVALUATOR(withdraw_vesting_balance)
DEFINE_EVALUATOR(transfer_research_share)
DEFINE_EVALUATOR(create_expertise_allocation_proposal)
DEFINE_EVALUATOR(vote_for_expertise_allocation_proposal)
DEFINE_EVALUATOR(create_grant)
DEFINE_EVALUATOR(create_grant_application)
DEFINE_EVALUATOR(create_review_for_application)
DEFINE_EVALUATOR(approve_grant_application)
DEFINE_EVALUATOR(reject_grant_application)
DEFINE_EVALUATOR(create_asset)
DEFINE_EVALUATOR(issue_asset)
DEFINE_EVALUATOR(reserve_asset)
DEFINE_EVALUATOR(create_award)
DEFINE_EVALUATOR(approve_award)
DEFINE_EVALUATOR(reject_award)
DEFINE_EVALUATOR(create_award_withdrawal_request)
DEFINE_EVALUATOR(certify_award_withdrawal_request)
DEFINE_EVALUATOR(approve_award_withdrawal_request)
DEFINE_EVALUATOR(reject_award_withdrawal_request)
DEFINE_EVALUATOR(pay_award_withdrawal_request)
DEFINE_EVALUATOR(create_research_nda)
DEFINE_EVALUATOR(sign_nda_contract)
DEFINE_EVALUATOR(decline_nda_contract)
DEFINE_EVALUATOR(close_nda_contract)
DEFINE_EVALUATOR(create_nda_content_access_request)
DEFINE_EVALUATOR(fulfill_nda_content_access_request)
DEFINE_EVALUATOR(join_research_contract)
DEFINE_EVALUATOR(leave_research_contract)
DEFINE_EVALUATOR(create_research)
DEFINE_EVALUATOR(create_research_content)
DEFINE_EVALUATOR(create_research_token_sale)
DEFINE_EVALUATOR(update_research)
DEFINE_EVALUATOR(create_assessment)
DEFINE_EVALUATOR(create_research_license)
DEFINE_EVALUATOR(create_contract_agreement)

}
} // deip::chain
